apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "formbuilder.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "formbuilder.name" . }}
    helm.sh/chart: {{ include "formbuilder.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.formbuilder.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "formbuilder.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "formbuilder.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        prometheus.io/scrape: "true"
    spec:
      containers:
      - name: certs
        image: "{{ .Values.certs.image.repository }}:{{ .Values.certs.image.tag }}"
        imagePullPolicy: {{ .Values.certs.image.pullPolicy }}
        securityContext:
          runAsNonRoot: true
          capabilities:
            drop:
             - SETUID
             - SETGID
        args:
          - --domain={{ template "formbuilder.fullname" $ }}.{{ .Release.Namespace }}.svc.cluster.local
          - --url={{ .Values.certs.internalCaUrl }}
          - --verbose=True
        volumeMounts:
          - name: certs
            mountPath: /certs
          - name: bundle
            mountPath: /etc/ssl/certs
            readOnly: true

      - name: proxy
        image: "{{ .Values.proxy.image.repository }}:{{ .Values.proxy.image.tag }}"
        imagePullPolicy: {{ .Values.proxy.image.pullPolicy }}
        securityContext:
          runAsNonRoot: true
          capabilities:
            drop:
             - SETUID
             - SETGID
        resources:
         limits:
          memory: "100Mi"
          cpu: "100m"
         requests:
          memory: "50Mi"
          cpu: "100m"
        env:
        - name: PROXY_SERVICE_HOST
          value: "127.0.0.1"
        - name: PROXY_SERVICE_PORT
          value: "{{ .Values.proxy.env.port }}"
        - name: SERVER_CERT
          value: "/certs/tls.pem"
        - name: SERVER_KEY
          value: "/certs/tls-key.pem"
        - name: SSL_CIPHERS
          value: "ECDHE-RSA-AES128-GCM-SHA256:AES256+EECDH:AES256+EDH:!aNULL"
        - name: ENABLE_UUID_PARAM
          value: "HEADER"
        - name: NAXSI_USE_DEFAULT_RULES
          value: "FALSE"
        - name: PORT_IN_HOST_HEADER
          value: "FALSE"
        - name: ERROR_REDIRECT_CODES
          value: "599"
        - name: ADD_NGINX_SERVER_CFG
          value: 'gzip off; location = /reload { allow 127.0.0.1; deny all; content_by_lua_block { os.execute("touch /tmp/nginx-reload-triggered; /usr/local/openresty/nginx/sbin/nginx -s reload; touch /tmp/nginx-reload-complete;") } }'
        - name: ADD_NGINX_LOCATION_CFG
          value: |
            gzip off;
            proxy_buffer_size         128k;
            proxy_buffers             4 256k;
            proxy_busy_buffers_size   256k;
        - name: LOG_FORMAT_NAME
          value: "json"
        - name: NO_LOGGING_URL_PARAMS
          value: "{{ .Values.proxy.env.noLoggingUrlParams }}"
        - name: NO_LOGGING_BODY
          value: "{{.Values.proxy.env.noLoggingBody}}"
        - name: NO_LOGGING_RESPONSE
          value: "{{.Values.proxy.env.noLoggingResponse}}"
        - name: STATSD_METRICS
          value: ".Values.proxy.env.statsdMetrics"
        ports:
        - name: https
          containerPort: 10443
        volumeMounts:
          - name: certs
            mountPath: /certs
          - name: bundle
            mountPath: /etc/ssl/certs
            readOnly: true

      - name: builder
        image: "{{ .Values.formbuilder.image.repository }}:{{ .Values.formbuilder.image.tag }}"
        imagePullPolicy: {{ .Values.formbuilder.image.pullPolicy }}
        securityContext:
          runAsUser: 1000
          runAsNonRoot: true
        volumeMounts:
        - name: config-volume
          mountPath: /config
        ports:
          - name: http
            containerPort: {{ .Values.proxy.env.port }}
            protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.proxy.env.port }}
        readinessProbe:
          httpGet:
            path: /readiness
            port: {{ .Values.proxy.env.port }}
        env:
          - name: PORT
            value: "{{ .Values.proxy.env.port }}"
        resources:
          {{- toYaml .Values.formbuilder.resources | nindent 10 }}
      {{- with .Values.formbuilder.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.formbuilder.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.formbuilder.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      imagePullSecrets:
      - name: {{ .Values.formbuilder.imageCredentials.name }}
      volumes:
      - name: config-volume
        secret:
          secretName: {{ template "formbuilder.fullname" . }}
      - name: bundle
        configMap:
          name: bundle
      - name: certs
        emptyDir: {}
